/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as QuizzesIndexImport } from './routes/quizzes/index'
import { Route as QuizzesCreateImport } from './routes/quizzes/create'
import { Route as QuizzesQuizIdImport } from './routes/quizzes/$quizId'
import { Route as QuizShareCodeJoinImport } from './routes/quiz/$shareCode/join'
import { Route as QuizQuizIdLiveImport } from './routes/quiz/$quizId/live'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesIndexRoute = QuizzesIndexImport.update({
  id: '/quizzes/',
  path: '/quizzes/',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesCreateRoute = QuizzesCreateImport.update({
  id: '/quizzes/create',
  path: '/quizzes/create',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesQuizIdRoute = QuizzesQuizIdImport.update({
  id: '/quizzes/$quizId',
  path: '/quizzes/$quizId',
  getParentRoute: () => rootRoute,
} as any)

const QuizShareCodeJoinRoute = QuizShareCodeJoinImport.update({
  id: '/quiz/$shareCode/join',
  path: '/quiz/$shareCode/join',
  getParentRoute: () => rootRoute,
} as any)

const QuizQuizIdLiveRoute = QuizQuizIdLiveImport.update({
  id: '/quiz/$quizId/live',
  path: '/quiz/$quizId/live',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/$quizId': {
      id: '/quizzes/$quizId'
      path: '/quizzes/$quizId'
      fullPath: '/quizzes/$quizId'
      preLoaderRoute: typeof QuizzesQuizIdImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/create': {
      id: '/quizzes/create'
      path: '/quizzes/create'
      fullPath: '/quizzes/create'
      preLoaderRoute: typeof QuizzesCreateImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/': {
      id: '/quizzes/'
      path: '/quizzes'
      fullPath: '/quizzes'
      preLoaderRoute: typeof QuizzesIndexImport
      parentRoute: typeof rootRoute
    }
    '/quiz/$quizId/live': {
      id: '/quiz/$quizId/live'
      path: '/quiz/$quizId/live'
      fullPath: '/quiz/$quizId/live'
      preLoaderRoute: typeof QuizQuizIdLiveImport
      parentRoute: typeof rootRoute
    }
    '/quiz/$shareCode/join': {
      id: '/quiz/$shareCode/join'
      path: '/quiz/$shareCode/join'
      fullPath: '/quiz/$shareCode/join'
      preLoaderRoute: typeof QuizShareCodeJoinImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/quizzes/$quizId': typeof QuizzesQuizIdRoute
  '/quizzes/create': typeof QuizzesCreateRoute
  '/quizzes': typeof QuizzesIndexRoute
  '/quiz/$quizId/live': typeof QuizQuizIdLiveRoute
  '/quiz/$shareCode/join': typeof QuizShareCodeJoinRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/quizzes/$quizId': typeof QuizzesQuizIdRoute
  '/quizzes/create': typeof QuizzesCreateRoute
  '/quizzes': typeof QuizzesIndexRoute
  '/quiz/$quizId/live': typeof QuizQuizIdLiveRoute
  '/quiz/$shareCode/join': typeof QuizShareCodeJoinRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/quizzes/$quizId': typeof QuizzesQuizIdRoute
  '/quizzes/create': typeof QuizzesCreateRoute
  '/quizzes/': typeof QuizzesIndexRoute
  '/quiz/$quizId/live': typeof QuizQuizIdLiveRoute
  '/quiz/$shareCode/join': typeof QuizShareCodeJoinRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/quizzes/$quizId'
    | '/quizzes/create'
    | '/quizzes'
    | '/quiz/$quizId/live'
    | '/quiz/$shareCode/join'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/quizzes/$quizId'
    | '/quizzes/create'
    | '/quizzes'
    | '/quiz/$quizId/live'
    | '/quiz/$shareCode/join'
  id:
    | '__root__'
    | '/'
    | '/quizzes/$quizId'
    | '/quizzes/create'
    | '/quizzes/'
    | '/quiz/$quizId/live'
    | '/quiz/$shareCode/join'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  QuizzesQuizIdRoute: typeof QuizzesQuizIdRoute
  QuizzesCreateRoute: typeof QuizzesCreateRoute
  QuizzesIndexRoute: typeof QuizzesIndexRoute
  QuizQuizIdLiveRoute: typeof QuizQuizIdLiveRoute
  QuizShareCodeJoinRoute: typeof QuizShareCodeJoinRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  QuizzesQuizIdRoute: QuizzesQuizIdRoute,
  QuizzesCreateRoute: QuizzesCreateRoute,
  QuizzesIndexRoute: QuizzesIndexRoute,
  QuizQuizIdLiveRoute: QuizQuizIdLiveRoute,
  QuizShareCodeJoinRoute: QuizShareCodeJoinRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/quizzes/$quizId",
        "/quizzes/create",
        "/quizzes/",
        "/quiz/$quizId/live",
        "/quiz/$shareCode/join"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/quizzes/$quizId": {
      "filePath": "quizzes/$quizId.tsx"
    },
    "/quizzes/create": {
      "filePath": "quizzes/create.tsx"
    },
    "/quizzes/": {
      "filePath": "quizzes/index.tsx"
    },
    "/quiz/$quizId/live": {
      "filePath": "quiz/$quizId/live.tsx"
    },
    "/quiz/$shareCode/join": {
      "filePath": "quiz/$shareCode/join.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
